{"meta":{"title":"Cpage.js","subtitle":null,"description":null,"author":"MeGee","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"DOM操作","slug":"7，DOM操作/DOM操作","date":"2017-08-22T12:29:38.310Z","updated":"2017-08-22T12:30:08.511Z","comments":true,"path":"2017/08/22/7，DOM操作/DOM操作/","link":"","permalink":"http://yoursite.com/2017/08/22/7，DOM操作/DOM操作/","excerpt":"","text":"Cpage.js提供建议的dom操作方式es6语法123import &#123; Dom &#125; from &apos;cpage&apos;;Dom(&apos;body&apos;).css(&apos;width&apos;)","categories":[{"name":"7，DOM操作","slug":"7，DOM操作","permalink":"http://yoursite.com/categories/7，DOM操作/"}],"tags":[]},{"title":"组件操作","slug":"6，组件操作/组件操作","date":"2017-08-22T12:25:28.139Z","updated":"2017-08-22T12:29:12.606Z","comments":true,"path":"2017/08/22/6，组件操作/组件操作/","link":"","permalink":"http://yoursite.com/2017/08/22/6，组件操作/组件操作/","excerpt":"","text":"方法名 应用范围 用途 $data 整个组件生命周期 修改组件的data属性，例：this.$data(‘text’, ‘new text’) $el 组件渲染完毕之后才能使用 组件节点 $refs 组件渲染完毕之后才能使用 单个dom节点，例：this.$refs[‘the-ele’]，需要配合c-ref使用 $http 整个组件生命周期 操作http，例：this.$http.ajax({})。支持ajax(),get(),post()等操作 $event 整个组件生命周期 事件触发和监听，例：this.$event.trigger(事件名,信息) this.$event.listen(事件名, 回调函数)","categories":[{"name":"6，组件操作","slug":"6，组件操作","permalink":"http://yoursite.com/categories/6，组件操作/"}],"tags":[]},{"title":"指令","slug":"5，指令/指令","date":"2017-08-22T12:02:55.303Z","updated":"2017-08-22T12:23:02.114Z","comments":true,"path":"2017/08/22/5，指令/指令/","link":"","permalink":"http://yoursite.com/2017/08/22/5，指令/指令/","excerpt":"","text":"指令名 用法 用途 c-事件名 c-event=”handel()” event可以为click,mouseover… 用于dom的事件绑定 c-for c-for=”item in items” 用于循环输出指定次数的 HTML 元素，表达式必须是数组 c-if c-if=”false“ 表达式为true，则渲染节点；否则不渲染 c-show c-show=”false“ 表达式为true，则显示节点；否则隐藏 c-ref c-ref=”btn” 节点标识符 c-html c-html=”span“ 将表达式内的字符替换节点的html","categories":[{"name":"5，指令","slug":"5，指令","permalink":"http://yoursite.com/categories/5，指令/"}],"tags":[]},{"title":"方法","slug":"4，方法/方法","date":"2017-08-22T12:01:47.405Z","updated":"2017-08-22T12:02:19.935Z","comments":true,"path":"2017/08/22/4，方法/方法/","link":"","permalink":"http://yoursite.com/2017/08/22/4，方法/方法/","excerpt":"","text":"方法名 是否必须 用途 beforeRender 否 组件完成渲染之前执行 render 是 组件完成渲染之后执行 bootstrap 是 Cpage对象的静态方法，用于将组件渲染到dom中","categories":[{"name":"4，方法","slug":"4，方法","permalink":"http://yoursite.com/categories/4，方法/"}],"tags":[]},{"title":"属性","slug":"3，属性/属性","date":"2017-08-22T11:40:09.516Z","updated":"2017-08-22T12:34:47.972Z","comments":true,"path":"2017/08/22/3，属性/属性/","link":"","permalink":"http://yoursite.com/2017/08/22/3，属性/属性/","excerpt":"","text":"属性名 是否必须 类型 用途 name 是 字符串 组件名称 components 是 数组 子组件名称集合 data 否 对象 组件属性 props 否 对象 用于子组件与父组件之间的数据传递 style 否 字符串 组件样式 styleId 否 字符串，id选择符 组件样式，es5语法 styleUrl 否 数组或对象 组件样式，es6语法，支持import * as css from ‘’; 或者require(‘../style.css’)，需要引入css-loader template 否 字符串 组件模板，es5,es6通用 templateId 否 字符串，id选择符 组件模板，es5语法 templateUrl 否 数组或对象 组件模板，es6语法，支持import * as html from ‘’; 或者require(‘../xx.html’)，需要引入html-loader","categories":[{"name":"3，属性","slug":"3，属性","permalink":"http://yoursite.com/categories/3，属性/"}],"tags":[]},{"title":"es6语法","slug":"2，组件/es6语法","date":"2017-08-21T14:01:41.516Z","updated":"2017-08-23T13:00:33.170Z","comments":true,"path":"2017/08/21/2，组件/es6语法/","link":"","permalink":"http://yoursite.com/2017/08/21/2，组件/es6语法/","excerpt":"","text":"声明一个hello组件1234567891011121314import Cpage, &#123; Component &#125; from &apos;cpage&apos;;export default class Hello extends Component &#123; constructor()&#123; super(); this.name = &apos;hello&apos;; this.data = &#123;&#125;; this.template = `hello`; &#125; render()&#123; &#125;&#125; 在根组件引用hello组件123456789101112131415161718192021import Cpage, &#123; Component &#125; from &apos;cpage&apos;;import Hello from &apos;./hello&apos;;const html = require(&apos;./app.html&apos;);export default class App extends Component &#123; constructor()&#123; super(); this.name = &apos;app&apos;; this.data = &#123;&#125;; this.templateUrl = html; this.components = [Hello]; &#125; handelC(event)&#123; this.$event.trigger(&apos;header-event&apos;, &apos;header&apos;); &#125; render()&#123; &#125;&#125;Cpage.bootstrap(&apos;#app&apos;, App);","categories":[{"name":"2，组件","slug":"2，组件","permalink":"http://yoursite.com/categories/2，组件/"}],"tags":[]},{"title":"cookie操作","slug":"8，cookie/cookie","date":"2017-08-21T14:01:13.372Z","updated":"2017-08-21T14:17:10.721Z","comments":true,"path":"2017/08/21/8，cookie/cookie/","link":"","permalink":"http://yoursite.com/2017/08/21/8，cookie/cookie/","excerpt":"","text":"es6语法1import &#123; Cookie &#125; from &apos;cpage&apos;; es5 可以直接使用Cookie对象 是否支持cookieCookie.support() 添加cookieCookie.set(name,value,{hours,path,domain,secure}) 获取cookieCookie.get(name:string) 移除cookieCookie.remove(name:string, path?:string)","categories":[{"name":"8，cookie","slug":"8，cookie","permalink":"http://yoursite.com/categories/8，cookie/"}],"tags":[]},{"title":"es5语法","slug":"2，组件/es5语法","date":"2017-08-21T13:54:41.354Z","updated":"2017-08-23T12:59:41.816Z","comments":true,"path":"2017/08/21/2，组件/es5语法/","link":"","permalink":"http://yoursite.com/2017/08/21/2，组件/es5语法/","excerpt":"","text":"基本示例，先上demo，一睹为快！ 声明一个hello组件1234567891011121314151617var Hello = Cpage.component(&#123; name: &apos;hello&apos;, components: [], template: `&lt;div&gt;&#123;&#123;hello&#125;&#125;&lt;/div&gt;`, data: &#123; hello: &apos;这是hello组件&apos; &#125;, props: &#123; &#125;, beforeRender() &#123; console.log(&apos;beforeRender&apos;) &#125;, render() &#123; console.log(&apos;render&apos;) &#125;&#125;); 在根组件引用hello组件123456789101112131415var app = Cpage.component(&#123; name: &apos;app&apos;, components: [Hello], template: `&lt;div&gt;&#123;&#123;text&#125;&#125;&lt;/div&gt;`, data: &#123; text: &apos;es5 demo&apos; &#125;, beforeRender() &#123; &#125;, render() &#123; &#125;&#125;);Cpage.bootstrap(&quot;#app&quot;, app);","categories":[{"name":"2，组件","slug":"2，组件","permalink":"http://yoursite.com/categories/2，组件/"}],"tags":[]},{"title":"框架简介","slug":"1，简介/简介","date":"2017-08-21T13:44:46.593Z","updated":"2017-08-21T14:15:05.539Z","comments":true,"path":"2017/08/21/1，简介/简介/","link":"","permalink":"http://yoursite.com/2017/08/21/1，简介/简介/","excerpt":"","text":"Cpage.js是一款轻量级的Mvvm框架，使用TypeScript（javascript的超集）开发。内置模板引擎，路由，指令，http，dom等模块。可以方便地进行组件化开发，语法统一、易用，不依赖于第三方框架，适合中小项目开发。框架同时支持es5与es6语法，可参考example中示例。 安装使用使用es6开发1234安装：npm install cpage引用：import Cpage, &#123; Component &#125; from &apos;cpage&apos;; 使用es5开发1&lt;script src=&quot;https://gist.github.com/chenhaozhi/73ed39d4704c1ad5b49bdf9ac2c3ebe4.js&quot;&gt;&lt;/script&gt;","categories":[{"name":"1，简介","slug":"1，简介","permalink":"http://yoursite.com/categories/1，简介/"}],"tags":[]}]}